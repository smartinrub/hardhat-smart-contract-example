{
  "language": "Solidity",
  "sources": {
    "contracts/HelloWorld.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract HelloWorld {\n    string private from;\n\n    function helloWorld() public view returns (string memory) {\n        if (bytes(from).length == 0) {\n            return \"Hello World!\";\n        }\n\n        return string(abi.encodePacked(\"Hello World from \", from, \"!\"));\n    }\n\n    function updateFrom(string memory _from) public {\n        from = _from;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}